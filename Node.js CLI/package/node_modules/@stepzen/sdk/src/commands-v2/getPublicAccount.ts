// Copyright IBM Corp. 2020, 2025

import {
  SDKConfigurationV2,
  StepZenCredentialsV2,
  ZenCtlResponseV2,
} from '../shared/types.js'
import {fetchPublicAccountGraphQLQuery} from '../shared/graphql-client.js'

export default async ({
  token,
  deploymentType,
  sdkConfig,
}: {
  token: string
  deploymentType: string
  sdkConfig: SDKConfigurationV2
}): Promise<ZenCtlResponseV2<StepZenCredentialsV2>> => {
  const url = new URL(sdkConfig.publicAccountApiUrl)
  // Include the token into the URL so that it is visible in the logs
  // (allows StepZen to do analytics based on the GCP logs).
  url.searchParams.set('token', token)

  const {data, errors} = await fetchPublicAccountGraphQLQuery<{
    account: {
      account: string
      adminKey: string
      apiKey: string
    }
  }>({
    url,
    query: `query (
      $token: String!
    ) {
      account: getAccountDetails(
        token: $token
      ) {
        account: accountName
        adminKey
        apiKey
      }
    }`,
    variables: {
      token,
    },
    sdkConfig,
  })

  if (errors) {
    // strip graphql-specific error details, leave only the message
    const message = errors.map(error => error.message).join('\n')
    return {
      data: undefined,
      error: {message},
    }
  }

  return {
    data: {
      account: data.account.account,
      adminKey: data.account.adminKey,
      apiKeys: [data.account.apiKey],
      deploymentType,
    },
    error: undefined,
  }
}
