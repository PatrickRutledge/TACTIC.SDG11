// Copyright IBM Corp. 2020, 2025

import accountCommand from './commands-v2/account.js'
import {createSdkClient} from './client-v2.js'
import {getUserAgent} from './shared/request.js'
import {SDKConfigurationV2} from './shared/types.js'

export const initV2 = (sdkConfig: SDKConfigurationV2) => {
  return {
    verify: async (
      account: string,
      adminkey: string,
      deploymentType: string,
    ) => {
      try {
        const {data} = await accountCommand({
          account,
          adminKey: adminkey,
          deploymentType,
          sdkConfig,
        })
        return Boolean(data)
      } catch {
        return false
      }
    },
    client: async (
      auth:
        | {account: string; adminKey: string; deploymentType: string}
        | {publicAccountToken: string; deploymentType: string},
    ) => {
      return createSdkClient(auth, sdkConfig)
    },
    get userAgent() {
      return getUserAgent(sdkConfig)
    },
  }
}

// a helper type to unwrap Promise<U> into U
type PromisedType<T> = T extends Promise<infer U> ? U : T

export type SDKV2 = ReturnType<typeof initV2>
export type SDKClientV2 = PromisedType<ReturnType<SDKV2['client']>>
