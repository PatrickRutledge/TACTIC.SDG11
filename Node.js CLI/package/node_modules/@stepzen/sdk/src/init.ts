// Copyright IBM Corp. 2020, 2025

import authenticate from './commands/authenticate.js'
import {createSdkClient} from './client.js'
import {getUserAgent} from './shared/request.js'
import {
  AnonymousClientOptions,
  SDKConfiguration,
  UserCredentialsClientOptions,
} from './shared/types.js'

export const init = (sdkConfig: SDKConfiguration) => {
  const defaults = {
    server: process.env.STEPZEN_SERVER_URL || 'https://{account}.stepzen.io',
  }

  return {
    verify: (account: string, adminkey: string) => {
      return authenticate(
        {
          account,
          adminkey,
          server: defaults.server.replace('{account}', account),
        },
        sdkConfig,
      )
    },
    client: async (
      options: UserCredentialsClientOptions | AnonymousClientOptions,
    ) => {
      return createSdkClient({...defaults, ...options}, sdkConfig)
    },
    get userAgent() {
      return getUserAgent(sdkConfig)
    },
  }
}

// a helper type to unwrap Promise<U> into U
type PromisedType<T> = T extends Promise<infer U> ? U : T

export type SDK = ReturnType<typeof init>
export type SDKClient = PromisedType<ReturnType<SDK['client']>>
