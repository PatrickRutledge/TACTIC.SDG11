#!/usr/bin/env -S node --no-deprecation
/* eslint-disable n/shebang */

const message = `
┌───────────────────────────────────────────────────────────────────┐
│                                                                   │
│  StepZen CLI does not support this version of NodeJS: $$version.  │
│  Please upgrade to NodeJS 18 or newer.                            │
│                                                                   │
└───────────────────────────────────────────────────────────────────┘
`

const nodeMajor = Number.parseInt(process.version.match(/\d+\./), 10)
if (nodeMajor > 0 && nodeMajor < 18) {
  const yellow = '\u001B[33m'
  const reset = '\u001B[0m'
  let version = `${process.version}.`
  version += '         '.slice(0, '$$version'.length - version.length + 1)
  console.warn(yellow + message.replace('$$version.', version) + reset)
}

const performanceEnabled =
  process.env.STEPZEN_ENABLE_PERF !== undefined &&
  process.env.STEPZEN_ENABLE_PERF.toLocaleLowerCase() !== 'false'

if (performanceEnabled) {
  process.env.DEBUG = process.env.DEBUG
    ? `${process.env.DEBUG},oclif:non-oclif-perf`
    : 'oclif:non-oclif-perf'
}

const {execute, settings} = await import('@oclif/core')
settings.performanceEnabled = performanceEnabled

try {
  await execute({dir: import.meta.url})
} finally {
  const start = Date.now()
  const {analytics} = await import('../lib/shared/segment.js')
  await analytics?.closeAndFlush()

  // mimic oclif's Performance.mark() output
  //
  // Not using oclif's Performance API directly since at this point oclif is
  // already shut down
  if (settings.performanceEnabled) {
    const boldred = '\u001B[38;5;196;1m'
    const reset = '\u001B[0m'
    console.log(
      `  ${boldred}oclif:non-oclif-perf${reset}     segment.flush: ${
        Date.now() - start
      }ms`,
    )
  }
}
